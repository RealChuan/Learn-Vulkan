name: CMake Build

on: 
  push:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - '.github/workflows/clean_cache.yml'
        - '.github/workflows/delete_workflow.yml'
        - '.github/workflows/readme.yml'
        - '.github/workflows/toolchain.yml'
        - '.clang-*'
        - 'LICENSE'
        - '.gitignore'
        - 'README*'
  pull_request:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - '.github/workflows/clean_cache.yml'
        - '.github/workflows/delete_workflow.yml'
        - '.github/workflows/readme.yml'
        - '.github/workflows/toolchain.yml'
        - '.clang-*'
        - 'LICENSE'
        - '.gitignore'
        - 'README*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        build_type:
          - "Release"
        generators:
          - "Ninja"
        libs:
          - glm glfw3 vulkan-headers stb

    steps:
      - name: Restore windows vcpkg
        if: startsWith(matrix.os, 'windows')
        uses: actions/cache/restore@v3
        with: 
          path: C:\vcpkg\installed
          key: ${{ runner.os }}-vcpkg-installed-${{ matrix.os }}
      - name: Restore macos or ubuntu vcpkg
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        uses: actions/cache/restore@v3
        with: 
          path: /usr/local/share/vcpkg/installed
          key: ${{ runner.os }}-vcpkg-installed-${{ matrix.os }}
      
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          cache: true

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          choco install ninja
          ninja --version
          cmake --version
          vcpkg install ${{ matrix.libs }} --triplet x64-windows
      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          brew install ninja
          ninja --version
          cmake --version
          clang --version
          vcpkg install ${{ matrix.libs }} --triplet x64-osx
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config
          ninja --version
          cmake --version
          gcc --version
          vcpkg install ${{ matrix.libs }} --triplet x64-linux

      - name: Enable Developer Command Prompt
        if: startsWith(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          arch: amd64
      - name: Configure windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_C_COMPILER=cl \
            -DCMAKE_CXX_COMPILER=cl \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir

      - name: Configure macos or ubuntu
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir

      - name: Build
        shell: bash
        run: |
          cmake --build ./build --config ${{ matrix.build_type }}
          